todo:
 ✔ Redo the same form with forms.Form and send email @done(2016-07-08 03:07) @project(todo)
 ✔ Redo the same form with the normal Django form @done(2016-07-08 01:58) @project(todo)
 ✔ Find a way to deal with Boolean Choice with crispy_forms for forms.Models. @done(2016-07-08 01:58) @project(todo)
 ✔ Try with https://github.com/tzangms/django-bootstrap-form @done(2016-07-08 01:58) @project(todo)
 ☐ Add tests
 ✔ Use file uploads @done(2016-07-08 03:07) @project(todo)
 ✔ Add the django API documentation (django_docs) @done(2016-07-08 03:11) @project(todo)
 ☐ Create a simple html form that I will add the model label and fields into it
   ☐ https://docs.djangoproject.com/ja/1.9/topics/forms/#building-a-form

crispy_forms:
  ☐ Best choice usually
  ☐ A lots of customization
  ☐ I couldn't find a way to use the Boolean
  ☐ Use layout.Fieldset to create section in the form
  ☐ Check the use of PrependText in BulletinForm (convidar/forms.py)

django_form:
  ☐ Easier to use
  ☐ Great with simple stuff
  ☐ Have widget (forms.Textarea)
  ☐ It doesn't have required field (*)
  ☐ Difficult to place a placeholder in it
  ☐ Difficult to customize
  ☐ Use only if the form is Dead simple and not for production

django-bootstrap-form:
  ☐ Don't ever use it and there is no Documentation for it

Helper Gist:
  ☐ https://gist.github.com/maraujop/1838193   for crispy_forms
  ☐ django_docs

from django.forms.fields import __all__
print(__all__)
__all__ = (
    'Field', 'CharField', 'IntegerField',
    'DateField', 'TimeField', 'DateTimeField', 'DurationField',
    'RegexField', 'EmailField', 'FileField', 'ImageField', 'URLField',
    'BooleanField', 'NullBooleanField', 'ChoiceField', 'MultipleChoiceField',
    'ComboField', 'MultiValueField', 'FloatField', 'DecimalField',
    'SplitDateTimeField', 'GenericIPAddressField', 'FilePathField',
    'SlugField', 'TypedChoiceField', 'TypedMultipleChoiceField', 'UUIDField',
)
